name: Test Function Deployment

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  FUNCTION_NAME: dumyFuncDZ    # This name needs to be globally unique
  SCRIPT_PATH: './dumyFunc'      # set this to the path where your PowerShell code is stored.
  RESOURCE_GROUP: dumyFunc
  LOCATION: 'westeurope'
  APP_SETTING: '{"FIRST_SETTING":"value1","SECOND_SETTING":"value2"}'  # function app settings in json format

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get-environment:
    runs-on: ubuntu-latest
    outputs:
      environment_name: ${{ steps.get_environment.outputs.environment_name }}
    steps:
      - id: get_environment
        run: |
          if [[ "$GITHUB_REF" = 'refs/heads/main' ]]
          then
            echo "::set-output name=environment_name::main"
          else
            echo "::set-output name=environment_name::dev"
          fi

  use-environment:
    runs-on: ubuntu-latest
    needs: [get-environment]
    environment:
      name: ${{ needs.get-environment.outputs.environment_name }}
    steps:
      - name: Echo
        run: "echo '${{ needs.get-environment.outputs.environment_name }}'"

      - uses: actions/checkout@v2

      - name: Echo
        run: "echo '${{ github.ref }}'"

      - name: Login via Az module for prod
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDS}}
          enable-AzPSSession: true

      # Deploy the Function
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript:
            .\deployFA.ps1 -FunctionName ${{ env.FUNCTION_NAME }} -FunctionResourceGroup ${{ env.RESOURCE_GROUP }} -Location ${{ env.LOCATION }} -AppSettingsJSON '${{ env.APP_SETTING }}'
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest

      # Get the publish profile, added creds
      - name: Azure App Service Publish Profile
        uses: aliencube/publish-profile-actions@v1.2.0
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDS }}
        id: publishprofile
        with:
          # Resource group name.
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          # App instance name.
          appName: ${{ env.FUNCTION_NAME }}

      # Deploy the Code
      - name: Azure Functions Action
        uses: Azure/functions-action@v1.1.8
        with:
          # Name of the Azure Function App
          app-name: ${{ env.FUNCTION_NAME }}
          # Path to package or folder. *.zip or a folder to deploy
          package: ${{ env.SCRIPT_PATH }}
          # Publish profile (*.publishsettings) file contents with web deploy secrets
          publish-profile: ${{ steps.publishprofile.outputs.profile }}

        # Reset the publish profile
      - name: Azure App Service Reset Profile
        uses: aliencube/publish-profile-actions@v1.2.0
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDS }}
        with:
          # Resource group name.
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          # App instance name.
          appName: ${{ env.FUNCTION_NAME }}
          # Value indicating whether to reset the publish profile or not.
          reset: true

  buildDev:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/main' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Echo
        run: "echo '${{ github.ref }}'"

      - name: Login via Az module for prod
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDS_DEV}}
          enable-AzPSSession: true

      # Deploy the Function
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript:
            .\deployFA.ps1 -FunctionName ${{ env.FUNCTION_NAME }} -FunctionResourceGroup ${{ env.RESOURCE_GROUP }} -Location ${{ env.LOCATION }} -AppSettingsJSON '${{ env.APP_SETTING }}'
          # Azure PS version to be used to execute the script, example: 1.8.0, 2.8.0, 3.4.0. To use the latest version, specify "latest".
          azPSVersion: latest

      # Get the publish profile, added creds
      - name: Azure App Service Publish Profile
        uses: aliencube/publish-profile-actions@v1.2.0
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDS_DEV }}
        id: publishprofile
        with:
          # Resource group name.
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          # App instance name.
          appName: ${{ env.FUNCTION_NAME }}

      # Deploy the Code
      - name: Azure Functions Action
        uses: Azure/functions-action@v1.1.8
        with:
          # Name of the Azure Function App
          app-name: ${{ env.FUNCTION_NAME }}
          # Path to package or folder. *.zip or a folder to deploy
          package: ${{ env.SCRIPT_PATH }}
          # Publish profile (*.publishsettings) file contents with web deploy secrets
          publish-profile: ${{ steps.publishprofile.outputs.profile }}

        # Reset the publish profile
      - name: Azure App Service Reset Profile
        uses: aliencube/publish-profile-actions@v1.2.0
        env:
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDS_DEV }}
        with:
          # Resource group name.
          resourceGroupName: ${{ env.RESOURCE_GROUP }}
          # App instance name.
          appName: ${{ env.FUNCTION_NAME }}
          # Value indicating whether to reset the publish profile or not.
          reset: true